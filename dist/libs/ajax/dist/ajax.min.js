/**!
 * ajax - v0.0.15
 * Ajax module in Vanilla JS
 * https://github.com/fdaciuk/ajax

 * Thu Dec 10 2015 21:15:38 GMT-0200 (BRST)
 * MIT (c) Fernando Daciuk
*/
!function(e,t){"use strict";"function"==typeof define&&define.amd?define("Ajax",t):"object"==typeof exports?exports=module.exports=t():e.Ajax=t()}(this,function(){"use strict";function e(){var e={},t={};return t.methods={done:function(){},error:function(){},always:function(){}},e.get=function(e){return t.XHRConnection("GET",e,null)},e.post=function(e,n){return t.XHRConnection("POST",e,n)},e.put=function(e,n){return t.XHRConnection("PUT",e,n)},e["delete"]=function(e,n){return t.XHRConnection("DELETE",e,n)},t.XHRConnection=function(e,n,o){var r=new XMLHttpRequest,s="application/x-www-form-urlencoded";return r.open(e,n||"",!0),r.setRequestHeader("Content-Type",s),r.addEventListener("readystatechange",t.ready,!1),r.send(t.objectToQueryString(o)),t.promises()},t.ready=function(){var e=this;if(e.readyState===e.DONE){if(e.removeEventListener("readystatechange",t.ready,!1),t.methods.always.apply(t.methods,t.parseResponse(e)),e.status>=200&&e.status<300)return t.methods.done.apply(t.methods,t.parseResponse(e));t.methods.error.apply(t.methods,t.parseResponse(e))}},t.parseResponse=function(e){var t;try{t=JSON.parse(e.responseText)}catch(n){t=e.responseText}return[t,e]},t.promises=function(){var e={};return Object.keys(t.methods).forEach(function(n){e[n]=t.generatePromise.call(this,n)},this),e},t.generatePromise=function(e){return function(n){return t.methods[e]=n,this}},t.objectToQueryString=function(e){return t.isObject(e)?t.getQueryString(e):e},t.getQueryString=function(e){return Object.keys(e).map(function(t){return encodeURIComponent(t)+"="+encodeURIComponent(e[t])}).join("&")},t.isObject=function(e){return"[object Object]"===Object.prototype.toString.call(e)},e}return e});